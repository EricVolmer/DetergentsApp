@using System.ComponentModel
@using DetergentsApp.Models
@model IEnumerable<DetergentsApp.Models.ProductViewModel>

<h2>Articles</h2>

@(Html.Kendo().Grid(Model)
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.productID).Hidden();
        columns.Bound(c => c.sheetTypeID).Hidden().Title("SheetType");
        //  columns.Bound(c => c.vikingStoreId);
        columns.Bound(c => c.productDescription).Width(230);
        columns.Bound(c => c.EAN).Width(150);
        columns.ForeignKey(c => c.vendorID, (List<SelectListItem>)
            ViewBag.Vendor, "Value", "Text").Title("Vendor ID").Width(150);

        // columns.ForeignKey(c => c.articleId, (List<SelectListItem>)
        //     ViewBag.articleID, "Value", "Text").Title("Article ID").Width(120);
        //
        // columns.ForeignKey(c => c.vikingStoreId, (List<SelectListItem>)
        //     ViewBag.storeID, "Value", "Text").Title("Store ID").Width(120);

        columns.ForeignKey(c => c.categoryID, (List<SelectListItem>)
            ViewBag.Category, "Value", "Text").Title("Category").Width(120);

        // columns.ForeignKey(c => c.vendorID, (List<SelectListItem>)
        //     ViewBag.Vendor, "Value", "Text").Title("Vendor ID").Width(150);
        //
        //
        // columns.ForeignKey(c => c.CountryID, (List<SelectListItem>)
        //     ViewBag.Country, "Value", "Text").Title("Country").Width(120);

        columns.Bound(c => c.adminToPublic).ClientTemplate("#: adminToPublic ? 'Approved To Public' : 'Not approved' #");

        columns.Command(command =>
        {
            command.Edit();
            command.Destroy();
        }).Width(180);
    })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .ToolBar(toolbar => { toolbar.Create(); })
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .PageSize(40)
        .Model(model =>
        {
            model.Id(p => p.productID);
            model.Field(p => p.productID).Editable(false);
        })
        .Group(group => group.Add("categoryID", typeof(string), ListSortDirection.Descending))
        .Read(read => read.Action("Products_Read", "Admin2"))
        .Create(create => create.Action("Products_Create", "Admin2"))
        .Update(update => update.Action("Products_Update", "Admin2"))
        .Destroy(destroy => destroy.Action("Products_Destroy", "Admin2"))
    )
    )

<h2>Article Files</h2>

@(Html.Kendo().Grid<UserFileViewModel>()
    .Name("filesGrid")
    .Columns(columns =>
    {
        columns.Bound(f => f.Name).ClientTemplate("<a href='files/?id=#= Id #'>#= Name #</a>").Title("File name");
        columns.Bound(f => f.productID);

        columns.ForeignKey(c => c.vendorID, (List<SelectListItem>)
            ViewBag.Vendor, "Value", "Text").Title("Vendor ID").Width(150);
        columns.Bound(f => f.adminApproved).ClientTemplate("#: adminApproved ? 'Approved' : 'Not approved' #");
        columns.ForeignKey(c => c.sheetTypeID, (List<SelectListItem>)
            ViewBag.SheetType, "Value", "Text").Title("SheetType").Width(150);

        columns.Command(command =>
        {
            command.Edit();
            command.Destroy();
        }).Width(250);
    })
    .Editable(editable => editable.Mode(GridEditMode.InLine).ConfirmDelete("Continue to delete this record?").DisplayDeleteConfirmation("Continue to delete this record?"))
    .Sortable()
    .Pageable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Model(model =>
        {
            model.Id(c => c.Id);
            model.Field(c => c.productID).Editable(false);
            model.Field(c => c.vendorID).Editable(false);
        }).Read(read => read.Action("FilesReadAdmin", "FileUpload"))
        .Update(update => update.Action("VendorFileUpdate", "FileUpload"))
        .Destroy(update => update.Action("FilesDestroyAdmin", "FileUpload"))
    ))

<script>

</script>