@using DetergentsApp.Models
@model IEnumerable<DetergentsApp.Models.Product>

@(Html.Kendo().Grid(Model)
    .Name("grid")
    .Pageable()
    .Sortable(sortable => sortable
        .AllowUnsort(true))    
    .Navigatable()
    .Resizable(r=>r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Groupable(g=>g.ShowFooter(false))
    .Filterable()
    .Scrollable(scr => scr.Height(430))
    .Columns(columns =>
    {
        columns.Select().Width(75).HtmlAttributes(new { @class="checkbox-align"}).HeaderHtmlAttributes(new { @class = "checkbox-align" });
        columns.Bound(p => p.productName).Title("Product Name");
        columns.Bound(p => p.productDescription).Title("Product Description");
        columns.Bound(p => p.EAN).Title("EAN Number")
                            .ClientTemplate("<span id='badge_#=ProductID#' class='badgeTemplate'></span>");
        columns.ForeignKey(c => c.CategoryID, (List<Category>)
            ViewData["categories"], "CategoryID", "CategoryName").Title("Category").Width(150);
        columns.Bound(p => p.validFrom).Title("Valid From");
        columns.Command(command =>
        {
            command.Destroy();
            command.Edit();
        });
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create();
        toolbar.Search();
    })
    .ColumnMenu(col=>col.Filterable(false))
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Events(events => events.DataBound("onDataBound"))
    .DataSource(dataSource => dataSource
        .Server()
        .PageSize(20)
        .Model(model =>
        {
            model.Id(p => p.ProductID);
            model.Field(p => p.ProductID).Editable(false);
            model.Field(p => p.productDescription).Editable(true);
            model.Field(p => p.EAN).Editable(false);
            model.Field(p => p.Category).Editable(true);
            model.Field(p => p.validFrom).Editable(true);
        })
        .Group(group=>group.Add("Category.CategoryName", typeof(string), System.ComponentModel.ListSortDirection.Descending))
        .Create("Products_Create", "Grid")
        .Read("Grid", "Grid")
        .Update("Products_Update", "Grid")
        .Destroy("Products_Destroy", "Grid")
    )

)

<script src="//cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.min.js"></script>

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }


    function returnFalse() {
        return false;
    }
</script>


@section styles {
    <style>
    .k-grid {
        font-family: "DejaVu Sans", "Arial", sans-serif;
    }
    
</style>
}