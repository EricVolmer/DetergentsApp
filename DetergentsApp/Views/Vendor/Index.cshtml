@model IEnumerable<DetergentsApp.Models.Vendor>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

 <section class="well">
        <h2 class="ra-well-title">Profile Setup</h2>
        <div class="form-horizontal form-widgets col-sm-6">
            <div class="form-group">
                <label class="control-label col-sm-4" for="name">Company Name</label>
                <div class="col-sm-8 col-md-6">
                    @(Html.Kendo().TextBox()
                        .Name("CompanyName"))
                    
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-4" for="companyID">Company ID</label>
                <div class="col-sm-8 col-md-6">
                    @(Html.Kendo().TextBox()
                        .Name("companyID"))
                </div>
            </div>
            
            <div class="form-group">
                            <label class="control-label col-sm-4" for="articleEAN">Article EAN</label>
                <div class="col-sm-8 col-md-6">
                    @(Html.Kendo().TextBox()
                        .Name("articleEAN"))
                </div>
                            <button class="k-button k-state-default">Check</button>

                        </div>
            
            <div class="form-group">
                <label class="control-label col-sm-4" for="gender">Sheet Type</label>
                <div class="col-sm-8 col-md-6">
                    @(Html.Kendo().DropDownList()
                        .Name("sheetType")
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .BindTo(new List<SelectListItem>() {
                              new SelectListItem() {
                                  Text = "Public Sheets",
                                  Value = "Public Sheets"
                              },
                              new SelectListItem() {
                                  Text = "Safety Sheets",
                                  Value = "Safety Sheets"
                              },
                                 new SelectListItem() {
                                  Text = "Medical Sheets",
                                  Value = "Medical Sheets"
                              }
                          })
                        )
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-4" for="language">Language of the file</label>
                <div class="col-sm-8 col-md-6">
                    @(Html.Kendo().DropDownList()
                        .Name("language")
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .Value("English")
                        .BindTo(new List<SelectListItem>() {
                              new SelectListItem() {
                                  Text = "Danish",
                                  Value = "Danish"
                              },
                              new SelectListItem() {
                                  Text = "German",
                                  Value = "German"
                              },
                                new SelectListItem() {
                                  Text = "English",
                                  Value = "English"
                              },
                                new SelectListItem() {
                                  Text = "Polish",
                                  Value = "Polish"
                              }
                          })
                        )
                </div>
            </div>
        </div>
     
        <div class="clearfix"></div>

        <div class="form-horizontal form-widgets col-sm-12">
            <div class="form-group">
                <label class="control-label col-sm-2" for="bio">File Upload</label>
                <div class="col-sm-10">
                    @(Html.Kendo().Upload()
                        .Name("files")
                        .Events(e => e.Success("onUploadSuccess"))
                        .Async(a => a.Save("Save", "FileUpload")
                            .AutoUpload(false)
                        )
                        )
                </div>
            </div>
        </div>

        <div class="buttons-wrap">
            <button class="k-button k-state-default">Cancel</button>
            <button class="k-button k-state-default">Upload</button>
        </div>
    </section>

