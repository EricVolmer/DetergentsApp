@using System.ComponentModel
@using DetergentsApp.Models
@model IEnumerable<DetergentsApp.Models.ProductViewModel>

<h2>Admin View</h2>

@(Html.Kendo().Grid(Model)
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.productID).Hidden();
        columns.Bound(c => c.EAN);
        columns.Bound(c => c.sheetTypeName).Title("Sheet Type");
        columns.Bound(c => c.productName).Title("Product Name");
        columns.Bound(c => c.productDescription).Title("Product Description");
        columns.ForeignKey(c => c.categoryID, (List<SelectListItem>)
            ViewBag.Category, "Value", "Text").Title("Category").Width(150);
        columns.Command(command =>
        {
            command.Edit();
            command.Destroy();
        }).Width(180);
    })
    .ToolBar(toolbar => { toolbar.Create(); })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .PageSize(40)
        .Model(model =>
        {
            model.Id(p => p.productID);
            model.Field(p => p.productID).Editable(false);
        })
        .Group(group => group.Add("categoryID", typeof(string), ListSortDirection.Descending))
        .Read(read => read.Action("Products_Read", "Admin2"))
        .Create(create => create.Action("Products_Create", "Admin2"))
        .Update(update => update.Action("Products_Update", "Admin2"))
        .Destroy(destroy => destroy.Action("Products_Destroy", "Admin2"))
    )
    )

@(Html.Kendo().Grid<UserFileViewModel>()
    .Name("filesGrid")
    .Columns(columns =>
    {
        columns.Bound(f => f.Name).ClientTemplate("<a href='files/?id=#= Id #'>#= Name #</a>").Title("File name");

        // Calculate the file size in KB, round it up and display it in a client template
        columns.Bound(f => f.DataLength).ClientTemplate("#= Math.ceil(DataLength / 1024) #").Title("File size in KB").Width(150);

        columns.Command(command => command.Destroy()).Width(100);
    })
    .Sortable()
    .Pageable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Model(m => m.Id(f => f.Id))
        .Read(read => read.Action("FilesRead", "FileUpload"))
        .Destroy(update => update.Action("FilesDestroy", "FileUpload"))
    ))

<script>


</script>