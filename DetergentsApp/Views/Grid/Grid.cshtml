@using DetergentsApp.Models
@model IEnumerable<DetergentsApp.Models.Product>


@(Html.Kendo().Grid(Model)
    .Name("grid")
    .Columns(columns =>
    {
        columns.Select().Width(75).HtmlAttributes(new { @class="checkbox-align"}).HeaderHtmlAttributes(new { @class = "checkbox-align" }).Width(20);
        columns.Bound(c => c.Title).Width(200);
        columns.Bound(p => p.productName).Title("Product Name").Width(200);
        columns.Bound(p => p.productDescription).Title("Product Description").Width(200);
        columns.Bound(p => p.EAN).Title("EAN Number").Width(200);
        columns.Bound(p => p.validFrom).Title("Valid From").Width(180);
        columns.ForeignKey(c => c.CategoryID, (List<Category>)
            ViewData["categories"], "CategoryID", "CategoryName").Title("Category").Width(150);

        columns.Command(command =>
        {
            command.Edit();
            command.Destroy();
        }).Width(200);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create();
        toolbar.Search();
    })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Groupable(g=>g.ShowFooter(false))

    .Scrollable(scr => scr.Height(430))
    .Events(events =>
    {
        events.Remove("onRemove");
        events.DetailExpand("onDetailExpand");
        events.Edit("onEdit");
    })
    .Events(e => e.Edit("hideProductID"))
    .DataSource(dataSource => dataSource
        .Server()
        .Model(model =>
        {
            model.Id(c => c.ProductID);

            model.Field(c => c.productName);
            model.Field(c => c.productDescription);
            model.Field(c => c.EAN);
            model.Field(c => c.validFrom);
            model.Field(c => c.Category).DefaultValue(new Category {CategoryID = 1, CategoryName = "Water"});
        }
        )
        .Group(group=>group.Add("Category.CategoryName", typeof(string), System.ComponentModel.ListSortDirection.Descending))

        .Read(read => read.Action("Grid", "Grid"))
        .Create("Products_Create", "Grid")
        .Update("Products_Update", "Grid")
        .Destroy("Products_Destroy", "Grid")
    )
    )
    
}
<script>

    function onRemove(e){
        //Implement the event handler for Remove
    }

    function onDetailExpand(e){
        //Implement the event handler for DetailExpand
    }

    function onEdit(e){
        //Implement the event handler for Edit
    }
     function error_handler(e) {    
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function() {
                            message += this + "\n";
                        });
                    }
                });        
                alert(message);
            }
        }

</script>

