@using System.ComponentModel
@model IEnumerable<DetergentsApp.Models.ProductViewModel>


@(Html.Kendo().Grid(Model)
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.productID).Hidden();

        columns.Bound(c => c.EAN);
        columns.Bound(c => c.title).Title("Title");
        columns.Bound(c => c.productName).Title("Product Name");
        columns.Bound(c => c.productDescription).Title("Product Description");
        columns.Bound(c => c.categoryName).Title("Category Name");
        //  columns.ForeignKey(c => c.categoryName, (List<ProductViewModel>)
        //     @ViewBag.Category , "CategoryID", "CategoryName").Title("Category").Width(150);
        columns.Command(command =>
        {
            command.Edit();
            command.Destroy();
        }).Width(180);
    })
    .ToolBar(toolbar => { toolbar.Create(); })
    .ToolBar(t => t.Template(
        @<text>
            @(Html.Kendo().Upload()
                .Name("files")
                .Async(a => a.Save("Save", "Grid"))
                .ShowFileList(true) // Hide the file list as we're displaying uploaded files in the Grid
                )

         </text>
        ))
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .PageSize(40)
        .Model(model =>
        {
            model.Id(p => p.productID);
            model.Field(p => p.productID).Editable(false);
        })
        .Group(group => group.Add("categoryName", typeof(string), ListSortDirection.Descending))
        .Read(read => read.Action("Products_Read", "Admin2"))
        .Create(create => create.Action("Products_Create", "Admin2"))
        .Update(update => update.Action("Products_Update", "Admin2"))
        .Destroy(destroy => destroy.Action("Products_Destroy", "Admin2"))
    )
    )

<script>

    function onEdit(e){
        //Implement the event handler for Edit
    }

    function onChange(e){
        //Implement the event handler for Change
    }

    function onRemove(e){
        //Implement the event handler for Remove
    }

    function onCancel(e){
        //Implement the event handler for Cancel
    }

</script>